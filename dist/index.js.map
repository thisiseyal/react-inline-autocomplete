{"version":3,"file":"index.js","sources":["../lib/key-enum.ts","../lib/index.tsx"],"sourcesContent":["export enum KeyEnum {\n  TAB = 'Tab',\n  ENTER = 'Enter',\n  ARROW_UP = 'ArrowUp',\n  ARROW_DOWN = 'ArrowDown',\n}\n","import React, { useRef, useState } from 'react';\nimport classNames from 'classnames';\nimport ignoreCase from 'ignore-case';\nimport { KeyEnum } from './key-enum';\nimport styles from './index.module.css';\n\nexport interface Props {\n  value?: string;\n  dataSource: DataSourceItem[];\n  className?: string;\n  style?: React.CSSProperties;\n  placeholder?: string;\n  disabled?: boolean;\n  navigate?: boolean;\n  caseSensitive?: boolean;\n  onBlur?: () => void;\n  onFocus?: () => void;\n  onChange?: (value: string) => void;\n  onPressEnter?: (value: string) => void;\n  onSelect?: (item: DataSourceItem) => void;\n}\n\nexport interface DataSourceItem {\n  text: string;\n  value: string | number;\n  [key: string]: any;\n}\n\nconst Autocomplete: React.ForwardRefRenderFunction<HTMLInputElement, Props> = (props, ref) => {\n  const {\n    value,\n    dataSource,\n    className,\n    navigate = true,\n    caseSensitive = true,\n    onBlur,\n    onFocus,\n    onChange,\n    onPressEnter,\n    onSelect,\n    ...others\n  } = props;\n  const [innerVal, setInnerVal] = useState('');\n  const [matchedDataSource, setMatchedDataSource] = useState<DataSourceItem[]>();\n  const [activeIndex, setActiveIndex] = useState(0);\n  const ctrlValue = value ?? innerVal;\n\n  /**\n   * inputRef\n   */\n  const inputRef = useRef<HTMLInputElement>();\n  React.useImperativeHandle(ref, () => inputRef.current!);\n\n  const updateValue = (value: string) => {\n    onChange && onChange(value);\n    setInnerVal(value);\n  };\n\n  const findMatchedDataSourceItem = (value: string) => {\n    return dataSource.filter(({ text }) => {\n      return caseSensitive\n        ? text.startsWith(value) && text !== value\n        : ignoreCase.startsWith(text, value) && !ignoreCase.equals(text, value);\n    })\n  }\n\n  const updateMatchedDataSource = (value?: string) => {\n    setActiveIndex(0);\n    value\n      ? setMatchedDataSource(\n        findMatchedDataSourceItem(value)\n        )\n      : setMatchedDataSource([]);\n  };\n\n  /**\n   * InputChange Handler\n   * @param e\n   */\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    updateValue(value);\n    updateMatchedDataSource(value);\n  };\n\n  /**\n   * KeyDown Handler\n   * deal with `Tab` | `Enter` | `ArrowUp` | `ArrowDown`\n   * @param e\n   */\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (Object.values(KeyEnum).includes(e.key as KeyEnum)) {\n      (e.key !== KeyEnum.TAB) && e.preventDefault();\n    }\n\n    const matchedDataSourceItem = matchedDataSource?.[activeIndex];\n\n    switch (e.key) {\n      case KeyEnum.TAB:\n        if (!matchedDataSourceItem) return;\n\n        /**\n         * onChange >>> onSelect >>> Search matched item\n         */\n        const { text } = matchedDataSourceItem;\n        updateValue(text);\n        onSelect && onSelect(matchedDataSourceItem);\n        updateMatchedDataSource(text);\n        break;\n      case KeyEnum.ENTER:\n        /**\n         * onPressEnter >>> Reset\n         */\n        \n        onPressEnter && onPressEnter(ctrlValue);\n        updateMatchedDataSource();\n        break;\n      case KeyEnum.ARROW_UP:\n        if (!navigate) break;\n\n        setActiveIndex((idx) => {\n          if (matchedDataSource?.length) {\n            return (idx - 1 + matchedDataSource.length) % matchedDataSource.length;\n          }\n          return 0;\n        });\n        break;\n      case KeyEnum.ARROW_DOWN:\n        if (!navigate) break;\n\n        setActiveIndex((idx) => {\n          if (matchedDataSource?.length) {\n            return (idx + 1) % matchedDataSource.length;\n          }\n          return 0;\n        });\n        break;\n      default:\n        break;\n    }\n  };\n\n  const breakUp = () => {\n    return matchedDataSource?.[activeIndex]?.text\n      ? `${ctrlValue}${matchedDataSource[activeIndex].text.slice(ctrlValue.length)}`\n      : undefined;\n  };\n\n  const wrapClassString = classNames('ria-wrap', styles['inline-autocomplete-wrap'], className); // `className` should cover `styles.wrap`\n  const inputClassString = classNames('ria-input', styles['inline-autocomplete-input']);\n  const completeClassString = classNames('ria-complete', styles['inline-autocomplete-complete']);\n  const completeContent = breakUp();\n\n  return (\n    <div className={wrapClassString}>\n      <input\n        ref={inputRef as any}\n        className={inputClassString}\n        value={ctrlValue}\n        type=\"text\"\n        onBlur={onBlur}\n        onFocus={onFocus}\n        onChange={handleChange}\n        onKeyDown={handleKeyDown}\n        {...others}\n      />\n      <div className={completeClassString}>{completeContent}</div>\n    </div>\n  );\n};\n\nconst RefAutoComplete = React.forwardRef<HTMLInputElement, Props>(Autocomplete);\nexport { RefAutoComplete as InlineAutocomplete };\n\nconst TextAreaAutocomplete: React.ForwardRefRenderFunction<HTMLTextAreaElement, Props> = (props, ref) => {\n  const {\n    value,\n    dataSource,\n    className,\n    navigate = true,\n    caseSensitive = true,\n    onBlur,\n    onFocus,\n    onChange,\n    onPressEnter,\n    onSelect,\n    ...others\n  } = props;\n  const [innerVal, setInnerVal] = useState('');\n  const [matchedDataSource, setMatchedDataSource] = useState<DataSourceItem[]>();\n  const [activeIndex, setActiveIndex] = useState(0);\n  const ctrlValue = value ?? innerVal;\n\n  /**\n   * inputRef\n   */\n  const inputRef = useRef<HTMLTextAreaElement>();\n  React.useImperativeHandle(ref, () => inputRef.current!);\n\n  const updateValue = (value: string) => {\n    onChange && onChange(value);\n    setInnerVal(value);\n  };\n\n  const updateMatchedDataSource = (value?: string) => {\n    setActiveIndex(0);\n    value\n      ? setMatchedDataSource(\n          dataSource.filter(({ text }) => {\n            return caseSensitive\n              ? text.startsWith(value) && text !== value\n              : ignoreCase.startsWith(text, value) && !ignoreCase.equals(text, value);\n          })\n        )\n      : setMatchedDataSource([]);\n  };\n\n  /**\n   * InputChange Handler\n   * @param e\n   */\n  const handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const value = e.target.value;\n    updateValue(value);\n    updateMatchedDataSource(value);\n  };\n\n  /**\n   * KeyDown Handler\n   * deal with `Tab` | `Enter` | `ArrowUp` | `ArrowDown`\n   * @param e\n   */\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n    if (Object.values(KeyEnum).includes(e.key as KeyEnum)) {\n      (e.key != KeyEnum.TAB) && e.preventDefault();\n    }\n\n    switch (e.key) {\n      case KeyEnum.TAB:\n        const matchedDataSourceItem = matchedDataSource?.[activeIndex];\n        if (!matchedDataSourceItem) return;\n\n        /**\n         * onChange >>> onSelect >>> Search matched item\n         */\n        const { text } = matchedDataSourceItem;\n        updateValue(text);\n        onSelect && onSelect(matchedDataSourceItem);\n        updateMatchedDataSource(text);\n        break;\n      case KeyEnum.ENTER:\n        /**\n         * onPressEnter >>> Just add a new line\n         */\n        updateValue(`${ctrlValue}\\n`);\n\n        break;\n      case KeyEnum.ARROW_UP:\n        if (!navigate) break;\n\n        setActiveIndex((idx) => {\n          if (matchedDataSource?.length) {\n            return (idx - 1 + matchedDataSource.length) % matchedDataSource.length;\n          }\n          return 0;\n        });\n        break;\n      case KeyEnum.ARROW_DOWN:\n        if (!navigate) break;\n\n        setActiveIndex((idx) => {\n          if (matchedDataSource?.length) {\n            return (idx + 1) % matchedDataSource.length;\n          }\n          return 0;\n        });\n        break;\n      default:\n        break;\n    }\n  };\n\n  const breakUp = () => {\n    return matchedDataSource?.[activeIndex]?.text\n      ? `${ctrlValue}${matchedDataSource[activeIndex].text.slice(ctrlValue.length)}`\n      : undefined;\n  };\n\n  const wrapClassString = classNames('ria-wrap', styles['inline-autocomplete-wrap'], className); // `className` should cover `styles.wrap`\n  const inputClassString = classNames('ria-input', styles['inline-autocomplete-input']);\n  const completeClassString = classNames('ria-complete', styles['inline-autocomplete-complete']);\n  const completeContent = breakUp();\n\n  return (\n    <div className={wrapClassString}>\n      <textarea\n        ref={inputRef as any}\n        className={inputClassString}\n        value={ctrlValue}\n        onBlur={onBlur}\n        onFocus={onFocus}\n        onChange={handleChange}\n        onKeyDown={handleKeyDown}\n        {...others}\n      />\n      <div className={completeClassString}>{completeContent}</div>\n    </div>\n  );\n};\n\nconst RefTextAreaAutocomplete = React.forwardRef<HTMLTextAreaElement, Props>(TextAreaAutocomplete);\nexport { RefTextAreaAutocomplete as TextAreaAutocomplete };\n"],"names":["KeyEnum","Autocomplete","props","ref","value","dataSource","className","_props$navigate","navigate","_props$caseSensitive","caseSensitive","onBlur","onFocus","onChange","onPressEnter","onSelect","others","_objectWithoutPropertiesLoose","_excluded","_useState","useState","innerVal","setInnerVal","_useState2","matchedDataSource","setMatchedDataSource","_useState3","activeIndex","setActiveIndex","ctrlValue","inputRef","useRef","React","useImperativeHandle","current","updateValue","findMatchedDataSourceItem","filter","_ref","text","startsWith","ignoreCase","equals","updateMatchedDataSource","handleChange","e","target","handleKeyDown","Object","values","includes","key","TAB","preventDefault","matchedDataSourceItem","ENTER","ARROW_UP","idx","length","ARROW_DOWN","breakUp","_matchedDataSource$ac","slice","undefined","wrapClassString","classNames","styles","inputClassString","completeClassString","completeContent","type","onKeyDown","RefAutoComplete","forwardRef","TextAreaAutocomplete","_props$navigate2","_props$caseSensitive2","_excluded2","_useState4","_useState5","_useState6","_ref2","_matchedDataSource$ac2","RefTextAreaAutocomplete"],"mappings":"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"}