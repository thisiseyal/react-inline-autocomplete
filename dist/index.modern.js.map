{"version":3,"file":"index.modern.js","sources":["../lib/key-enum.ts","../lib/index.tsx"],"sourcesContent":["export enum KeyEnum {\n  TAB = 'Tab',\n  ENTER = 'Enter',\n  ARROW_UP = 'ArrowUp',\n  ARROW_DOWN = 'ArrowDown',\n}\n","import React, { useRef, useState } from 'react';\nimport classNames from 'classnames';\nimport ignoreCase from 'ignore-case';\nimport { KeyEnum } from './key-enum';\nimport styles from './index.module.css';\n\nexport interface Props {\n  value?: string;\n  dataSource: DataSourceItem[];\n  className?: string;\n  style?: React.CSSProperties;\n  placeholder?: string;\n  disabled?: boolean;\n  navigate?: boolean;\n  caseSensitive?: boolean;\n  onBlur?: () => void;\n  onFocus?: () => void;\n  onChange?: (value: string) => void;\n  onPressEnter?: (value: string) => void;\n  onSelect?: (item: DataSourceItem) => void;\n}\n\nexport interface DataSourceItem {\n  text: string;\n  value: string | number;\n  [key: string]: any;\n}\n\nconst Autocomplete: React.ForwardRefRenderFunction<HTMLInputElement, Props> = (props, ref) => {\n  const {\n    value,\n    dataSource,\n    className,\n    navigate = true,\n    caseSensitive = true,\n    onBlur,\n    onFocus,\n    onChange,\n    onPressEnter,\n    onSelect,\n    ...others\n  } = props;\n  const [innerVal, setInnerVal] = useState('');\n  const [matchedDataSource, setMatchedDataSource] = useState<DataSourceItem[]>();\n  const [activeIndex, setActiveIndex] = useState(0);\n  const ctrlValue = value ?? innerVal;\n\n  /**\n   * inputRef\n   */\n  const inputRef = useRef<HTMLInputElement>();\n  React.useImperativeHandle(ref, () => inputRef.current!);\n\n  const updateValue = (value: string) => {\n    onChange && onChange(value);\n    setInnerVal(value);\n  };\n\n  const findMatchedDataSourceItem = (value: string) => {\n    return dataSource.filter(({ text }) => {\n      return caseSensitive\n        ? text.startsWith(value) && text !== value\n        : ignoreCase.startsWith(text, value) && !ignoreCase.equals(text, value);\n    })\n  }\n\n  const updateMatchedDataSource = (value?: string) => {\n    setActiveIndex(0);\n    value\n      ? setMatchedDataSource(\n        findMatchedDataSourceItem(value)\n        )\n      : setMatchedDataSource([]);\n  };\n\n  /**\n   * InputChange Handler\n   * @param e\n   */\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    updateValue(value);\n    updateMatchedDataSource(value);\n  };\n\n  /**\n   * KeyDown Handler\n   * deal with `Tab` | `Enter` | `ArrowUp` | `ArrowDown`\n   * @param e\n   */\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (Object.values(KeyEnum).includes(e.key as KeyEnum)) {\n      (e.key !== KeyEnum.TAB) && e.preventDefault();\n    }\n\n    const matchedDataSourceItem = matchedDataSource?.[activeIndex];\n\n    switch (e.key) {\n      case KeyEnum.TAB:\n        if (!matchedDataSourceItem) return;\n\n        /**\n         * onChange >>> onSelect >>> Search matched item\n         */\n        const { text } = matchedDataSourceItem;\n        updateValue(text);\n        onSelect && onSelect(matchedDataSourceItem);\n        updateMatchedDataSource(text);\n        break;\n      case KeyEnum.ENTER:\n        /**\n         * onPressEnter >>> Reset\n         */\n        \n        onPressEnter && onPressEnter(ctrlValue);\n        updateMatchedDataSource();\n        break;\n      case KeyEnum.ARROW_UP:\n        if (!navigate) break;\n\n        setActiveIndex((idx) => {\n          if (matchedDataSource?.length) {\n            return (idx - 1 + matchedDataSource.length) % matchedDataSource.length;\n          }\n          return 0;\n        });\n        break;\n      case KeyEnum.ARROW_DOWN:\n        if (!navigate) break;\n\n        setActiveIndex((idx) => {\n          if (matchedDataSource?.length) {\n            return (idx + 1) % matchedDataSource.length;\n          }\n          return 0;\n        });\n        break;\n      default:\n        break;\n    }\n  };\n\n  const breakUp = () => {\n    return matchedDataSource?.[activeIndex]?.text\n      ? `${ctrlValue}${matchedDataSource[activeIndex].text.slice(ctrlValue.length)}`\n      : undefined;\n  };\n\n  const wrapClassString = classNames('ria-wrap', styles['inline-autocomplete-wrap'], className); // `className` should cover `styles.wrap`\n  const inputClassString = classNames('ria-input', styles['inline-autocomplete-input']);\n  const completeClassString = classNames('ria-complete', styles['inline-autocomplete-complete']);\n  const completeContent = breakUp();\n\n  return (\n    <div className={wrapClassString}>\n      <input\n        ref={inputRef as any}\n        className={inputClassString}\n        value={ctrlValue}\n        type=\"text\"\n        onBlur={onBlur}\n        onFocus={onFocus}\n        onChange={handleChange}\n        onKeyDown={handleKeyDown}\n        {...others}\n      />\n      <div className={completeClassString}>{completeContent}</div>\n    </div>\n  );\n};\n\nconst RefAutoComplete = React.forwardRef<HTMLInputElement, Props>(Autocomplete);\nexport { RefAutoComplete as InlineAutocomplete };\n\nconst TextAreaAutocomplete: React.ForwardRefRenderFunction<HTMLTextAreaElement, Props> = (props, ref) => {\n  const {\n    value,\n    dataSource,\n    className,\n    navigate = true,\n    caseSensitive = true,\n    onBlur,\n    onFocus,\n    onChange,\n    onPressEnter,\n    onSelect,\n    ...others\n  } = props;\n  const [innerVal, setInnerVal] = useState('');\n  const [matchedDataSource, setMatchedDataSource] = useState<DataSourceItem[]>();\n  const [activeIndex, setActiveIndex] = useState(0);\n  const ctrlValue = value ?? innerVal;\n\n  /**\n   * inputRef\n   */\n  const inputRef = useRef<HTMLTextAreaElement>();\n  React.useImperativeHandle(ref, () => inputRef.current!);\n\n  const updateValue = (value: string) => {\n    onChange && onChange(value);\n    setInnerVal(value);\n  };\n\n  const updateMatchedDataSource = (value?: string) => {\n    setActiveIndex(0);\n    value\n      ? setMatchedDataSource(\n          dataSource.filter(({ text }) => {\n            return caseSensitive\n              ? text.startsWith(value) && text !== value\n              : ignoreCase.startsWith(text, value) && !ignoreCase.equals(text, value);\n          })\n        )\n      : setMatchedDataSource([]);\n  };\n\n  /**\n   * InputChange Handler\n   * @param e\n   */\n  const handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const value = e.target.value;\n    updateValue(value);\n    updateMatchedDataSource(value);\n  };\n\n  /**\n   * KeyDown Handler\n   * deal with `Tab` | `Enter` | `ArrowUp` | `ArrowDown`\n   * @param e\n   */\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n    if (Object.values(KeyEnum).includes(e.key as KeyEnum)) {\n      (e.key != KeyEnum.TAB) && e.preventDefault();\n    }\n\n    switch (e.key) {\n      case KeyEnum.TAB:\n        const matchedDataSourceItem = matchedDataSource?.[activeIndex];\n        if (!matchedDataSourceItem) return;\n\n        /**\n         * onChange >>> onSelect >>> Search matched item\n         */\n        const { text } = matchedDataSourceItem;\n        updateValue(text);\n        onSelect && onSelect(matchedDataSourceItem);\n        updateMatchedDataSource(text);\n        break;\n      case KeyEnum.ENTER:\n        /**\n         * onPressEnter >>> Just add a new line\n         */\n        updateValue(`${ctrlValue}\\n`);\n\n        break;\n      case KeyEnum.ARROW_UP:\n        if (!navigate) break;\n\n        setActiveIndex((idx) => {\n          if (matchedDataSource?.length) {\n            return (idx - 1 + matchedDataSource.length) % matchedDataSource.length;\n          }\n          return 0;\n        });\n        break;\n      case KeyEnum.ARROW_DOWN:\n        if (!navigate) break;\n\n        setActiveIndex((idx) => {\n          if (matchedDataSource?.length) {\n            return (idx + 1) % matchedDataSource.length;\n          }\n          return 0;\n        });\n        break;\n      default:\n        break;\n    }\n  };\n\n  const breakUp = () => {\n    return matchedDataSource?.[activeIndex]?.text\n      ? `${ctrlValue}${matchedDataSource[activeIndex].text.slice(ctrlValue.length)}`\n      : undefined;\n  };\n\n  const wrapClassString = classNames('ria-wrap', styles['inline-autocomplete-wrap'], className); // `className` should cover `styles.wrap`\n  const inputClassString = classNames('ria-input', styles['inline-autocomplete-input']);\n  const completeClassString = classNames('ria-complete', styles['inline-autocomplete-complete']);\n  const completeContent = breakUp();\n\n  return (\n    <div className={wrapClassString}>\n      <textarea\n        ref={inputRef as any}\n        className={inputClassString}\n        value={ctrlValue}\n        onBlur={onBlur}\n        onFocus={onFocus}\n        onChange={handleChange}\n        onKeyDown={handleKeyDown}\n        {...others}\n      />\n      <div className={completeClassString}>{completeContent}</div>\n    </div>\n  );\n};\n\nconst RefTextAreaAutocomplete = React.forwardRef<HTMLTextAreaElement, Props>(TextAreaAutocomplete);\nexport { RefTextAreaAutocomplete as TextAreaAutocomplete };\n"],"names":["KeyEnum","Autocomplete","props","ref","value","dataSource","className","navigate","caseSensitive","onBlur","onFocus","onChange","onPressEnter","onSelect","others","_objectWithoutPropertiesLoose","_excluded","innerVal","setInnerVal","useState","matchedDataSource","setMatchedDataSource","activeIndex","setActiveIndex","ctrlValue","inputRef","useRef","React","useImperativeHandle","current","updateValue","findMatchedDataSourceItem","filter","text","startsWith","ignoreCase","equals","updateMatchedDataSource","handleChange","e","target","handleKeyDown","Object","values","includes","key","TAB","preventDefault","matchedDataSourceItem","ENTER","ARROW_UP","idx","length","ARROW_DOWN","breakUp","_matchedDataSource$ac","slice","undefined","wrapClassString","classNames","styles","inputClassString","completeClassString","completeContent","type","onKeyDown","RefAutoComplete","forwardRef","TextAreaAutocomplete","_excluded2","_matchedDataSource$ac2","RefTextAreaAutocomplete"],"mappings":"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"}